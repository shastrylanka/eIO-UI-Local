{
  "version": 3,
  "file": "tests.js",
  "sources": [
    "tmp/transpiled/tests/acceptance/component_test.js",
    "tmp/transpiled/tests/acceptance/helper_test.js",
    "tmp/transpiled/tests/acceptance/index_test.js",
    "tmp/transpiled/tests/helpers/isolated_container.js",
    "tmp/transpiled/tests/helpers/start_app.js",
    "tmp/transpiled/tests/unit/routes/index_test.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K",
  "sourcesContent": [
    "define(\"appkit/tests/acceptance/component_test\", \n  [],\n  function() {\n    \"use strict\";\n    var App;\n\n    module('Acceptances - Component', {\n      setup: function(){\n        App = startApp();\n      },\n      teardown: function() {\n        Ember.run(App, 'destroy');\n      }\n    });\n\n    test('component output is rendered', function(){\n      expect(2);\n\n      visit('/component-test').then(function(){\n        var list = find('.pretty-color');\n\n        equal(list.length, 3);\n        equal(list.first().text(), 'Pretty Color: purple\\n');\n      });\n    });\n  });",
    "define(\"appkit/tests/acceptance/helper_test\", \n  [],\n  function() {\n    \"use strict\";\n    var App;\n\n    module(\"Acceptances - Helper\", {\n      setup: function(){\n        App = startApp();\n      },\n      teardown: function() {\n        Ember.run(App, 'destroy');\n      }\n    });\n\n    test(\"helper output is rendered\", function(){\n      expect(1);\n\n      visit('/helper-test').then(function(){\n        ok(exists(\"h3:contains('My name is Ember.')\"));\n      });\n    });\n  });",
    "define(\"appkit/tests/acceptance/index_test\", \n  [],\n  function() {\n    \"use strict\";\n    var App;\n\n    module('Acceptances - Index', {\n      setup: function(){\n        App = startApp();\n      },\n      teardown: function() {\n        Ember.run(App, 'destroy');\n      }\n    });\n\n    test('index renders', function(){\n      expect(3);\n\n      visit('/').then(function(){\n        var title = find('h1');\n        var list = find('#test-target>li');\n\n        equal(title.text(), 'Welcome to Ember.js');\n\n        equal(list.length, 3);\n        equal(list.text().replace(/\\s/g, ''), 'redyellowblue');\n      });\n    });\n  });",
    "define(\"appkit/tests/helpers/isolated_container\", \n  [\"resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    function isolatedContainer(fullNames) {\n      var container = new Ember.Container();\n\n      container.optionsForType('component', { singleton: false });\n      container.optionsForType('view', { singleton: false });\n      container.optionsForType('template', { instantiate: false });\n      container.optionsForType('helper', { instantiate: false });\n      \n      var resolver = Resolver['default'].create();\n\n      resolver.namespace = {\n        modulePrefix: 'appkit'\n      };\n\n      for (var i = fullNames.length; i > 0; i--) {\n        var fullName = fullNames[i - 1];\n        container.register(fullName, resolver.resolve(fullName));\n      }\n\n      return container;\n    }\n\n    __exports__[\"default\"] = isolatedContainer;\n  });",
    "define(\"appkit/tests/helpers/start_app\", \n  [\"appkit/app\",\"appkit/router\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Application = __dependency1__[\"default\"];\n    var Router = __dependency2__[\"default\"];\n\n    function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: '#ember-testing',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Ember.run.join(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      Router.reopen({\n        location: 'none'\n      });\n\n      App.reset(); // this shouldn't be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n\n    __exports__[\"default\"] = startApp;\n  });",
    "define(\"appkit/tests/unit/routes/index_test\", \n  [\"appkit/routes/index\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var Index = __dependency1__[\"default\"];\n\n    var route;\n    module(\"Unit - IndexRoute\", {\n      setup: function(){\n        var container = isolatedContainer([\n          'route:index'\n        ]);\n\n        route = container.lookup('route:index');\n      }\n    });\n\n    test(\"it exists\", function(){\n      ok(route);\n      ok(route instanceof Index);\n    });\n\n    test(\"#model\", function(){\n      deepEqual(route.model(), ['red', 'yellow', 'blue']);\n    });\n  });"
  ]
}